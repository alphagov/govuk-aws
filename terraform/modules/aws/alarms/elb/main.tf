/**
* ## Module: aws/alarms/elb
*
* This module creates the following CloudWatch alarms in the
* AWS/ELB namespace:
*
*   - HTTPCode_Backend_4XX greater than or equal to threshold
*   - HTTPCode_Backend_5XX greater than or equal to threshold
*   - HTTPCode_ELB_4XX greater than or equal to threshold
*   - HTTPCode_ELB_5XX greater than or equal to threshold
*   - SurgeQueueLength greater than or equal to threshold
*   - HealthyHostCount less than threshold
*
* All metrics are measured during a period of 60 seconds and evaluated
* during 5 consecutive periods.
*
* HTTPCode_* metrics are only reported for HTTP listeners. These metrics
* should encapsulate errors caused by high SurgeQueueLength values and
* lack of healthy backends.
*
* For HTTP listeners we can disable SurgeQueueLength and HealthyHostCount
* alarms. For TCP listeners, we should disable HTTPCode_* alarms.
*
* To disable HTTPCode_* alarms, set the `httpcode_*_threshold` parameters to 0.
* To disable the SurgeQueueLength alarm, set the `surgequeuelength_threshold`
* parameter to 0.
* To disable the HealthyHostCount alarm, set the `healthyhostcount_threshold`
* parameter to 0.
*
* AWS/ELB metrics reference:
*
* http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/elb-metricscollected.html
*/
variable "name_prefix" {
  type        = string
  description = "The alarm name prefix."
}

variable "alarm_actions" {
  type        = list(string)
  description = "The list of actions to execute when this alarm transitions into an ALARM state. Each action is specified as an Amazon Resource Number (ARN)."
}

variable "elb_name" {
  type        = string
  description = "The name of the ELB that we want to monitor."
}

variable "httpcode_backend_4xx_threshold" {
  type        = string
  description = "The value against which the HTTPCode_Backend_4XX metric is compared."
  default     = "80"
}

variable "httpcode_backend_5xx_threshold" {
  type        = string
  description = "The value against which the HTTPCode_Backend_5XX metric is compared."
  default     = "80"
}

variable "httpcode_elb_4xx_threshold" {
  type        = string
  description = "The value against which the HTTPCode_ELB_4XX metric is compared."
  default     = "80"
}

variable "httpcode_elb_5xx_threshold" {
  type        = string
  description = "The value against which the HTTPCode_ELB_5XX metric is compared."
  default     = "80"
}

variable "surgequeuelength_threshold" {
  type        = string
  description = "The value against which the SurgeQueueLength metric is compared. The maximum size of the queue is 1,024. Additional requests are rejected when the queue is full."
  default     = "0"
}

variable "healthyhostcount_threshold" {
  type        = string
  description = "The value against which the HealthyHostCount metric is compared."
  default     = "0"
}

# Resources
#--------------------------------------------------------------
resource "aws_cloudwatch_metric_alarm" "elb_httpcode_backend_4xx" {
  count               = var.httpcode_backend_4xx_threshold > 0 ? 1 : 0
  alarm_name          = "${var.name_prefix}-elb-httpcode_backend_4xx"
  comparison_operator = "GreaterThanOrEqualToThreshold"
  evaluation_periods  = "5"
  metric_name         = "HTTPCode_Backend_4XX"
  namespace           = "AWS/ELB"
  period              = "60"
  statistic           = "Sum"
  threshold           = var.httpcode_backend_4xx_threshold
  actions_enabled     = true
  alarm_actions       = var.alarm_actions
  alarm_description   = "This metric monitors the sum of HTTP 4XX response codes generated by registered instances."

  dimensions = {
    LoadBalancerName = "${var.elb_name}"
  }
}

resource "aws_cloudwatch_metric_alarm" "elb_httpcode_backend_5xx" {
  count               = var.httpcode_backend_5xx_threshold > 0 ? 1 : 0
  alarm_name          = "${var.name_prefix}-elb-httpcode_backend_5xx"
  comparison_operator = "GreaterThanOrEqualToThreshold"
  evaluation_periods  = "5"
  metric_name         = "HTTPCode_Backend_5XX"
  namespace           = "AWS/ELB"
  period              = "60"
  statistic           = "Sum"
  threshold           = var.httpcode_backend_5xx_threshold
  actions_enabled     = true
  alarm_actions       = var.alarm_actions
  alarm_description   = "This metric monitors the sum of HTTP 5XX response codes generated by registered instances."
  treat_missing_data  = "notBreaching"

  dimensions = {
    LoadBalancerName = "${var.elb_name}"
  }
}

resource "aws_cloudwatch_metric_alarm" "elb_httpcode_elb_4xx" {
  count               = var.httpcode_elb_4xx_threshold > 0 ? 1 : 0
  alarm_name          = "${var.name_prefix}-elb-httpcode_elb_4xx"
  comparison_operator = "GreaterThanOrEqualToThreshold"
  evaluation_periods  = "5"
  metric_name         = "HTTPCode_ELB_4XX"
  namespace           = "AWS/ELB"
  period              = "60"
  statistic           = "Sum"
  threshold           = var.httpcode_elb_4xx_threshold
  actions_enabled     = true
  alarm_actions       = var.alarm_actions
  alarm_description   = "This metric monitors the sum of HTTP 4XX server error codes generated by the load balancer."
  treat_missing_data  = "notBreaching"

  dimensions = {
    LoadBalancerName = "${var.elb_name}"
  }
}

resource "aws_cloudwatch_metric_alarm" "elb_httpcode_elb_5xx" {
  count               = var.httpcode_elb_5xx_threshold > 0 ? 1 : 0
  alarm_name          = "${var.name_prefix}-elb-httpcode_elb_5xx"
  comparison_operator = "GreaterThanOrEqualToThreshold"
  evaluation_periods  = "5"
  metric_name         = "HTTPCode_ELB_5XX"
  namespace           = "AWS/ELB"
  period              = "60"
  statistic           = "Sum"
  threshold           = var.httpcode_elb_5xx_threshold
  actions_enabled     = true
  alarm_actions       = var.alarm_actions
  alarm_description   = "This metric monitors the sum of HTTP 5XX server error codes generated by the load balancer."
  treat_missing_data  = "notBreaching"

  dimensions = {
    LoadBalancerName = "${var.elb_name}"
  }
}

resource "aws_cloudwatch_metric_alarm" "elb_surgequeuelength" {
  count               = var.surgequeuelength_threshold > 0 ? 1 : 0
  alarm_name          = "${var.name_prefix}-elb-surgequeuelength"
  comparison_operator = "GreaterThanOrEqualToThreshold"
  evaluation_periods  = "5"
  metric_name         = "SurgeQueueLength"
  namespace           = "AWS/ELB"
  period              = "60"
  statistic           = "Maximum"
  threshold           = var.surgequeuelength_threshold
  actions_enabled     = true
  alarm_actions       = var.alarm_actions
  alarm_description   = "This metric monitors maximum number of requests that are pending routing."

  dimensions = {
    LoadBalancerName = "${var.elb_name}"
  }
}

resource "aws_cloudwatch_metric_alarm" "elb_healthyhostcount" {
  count               = var.healthyhostcount_threshold > 0 ? 1 : 0
  alarm_name          = "${var.name_prefix}-elb-healthyhostcount"
  comparison_operator = "LessThanThreshold"
  evaluation_periods  = "5"
  metric_name         = "HealthyHostCount"
  namespace           = "AWS/ELB"
  period              = "60"
  statistic           = "Maximum"
  threshold           = var.healthyhostcount_threshold
  actions_enabled     = true
  alarm_actions       = var.alarm_actions
  alarm_description   = "This metric monitors maximum number of healthy instances registered with your load balancer."

  dimensions = {
    LoadBalancerName = "${var.elb_name}"
  }
}

# Outputs
#--------------------------------------------------------------

// The ID of the ELB HTTPCode_Backend_4XX health check.
output "alarm_elb_httpcode_backend_4xx_id" {
  value       = aws_cloudwatch_metric_alarm.elb_httpcode_backend_4xx.*.id
  description = "The ID of the ELB HTTPCode_Backend_4XX health check."
}

// The ID of the ELB HTTPCode_Backend_5XX health check.
output "alarm_elb_httpcode_backend_5xx_id" {
  value       = aws_cloudwatch_metric_alarm.elb_httpcode_backend_5xx.*.id
  description = "The ID of the ELB HTTPCode_Backend_5XX health check."
}

// The ID of the ELB HTTPCode_ELB_4XX health check.
output "alarm_elb_httpcode_elb_4xx_id" {
  value       = aws_cloudwatch_metric_alarm.elb_httpcode_elb_4xx.*.id
  description = "The ID of the ELB HTTPCode_ELB_4XX health check."
}

// The ID of the ELB HTTPCode_ELB_5XX health check.
output "alarm_elb_httpcode_elb_5xx_id" {
  value       = aws_cloudwatch_metric_alarm.elb_httpcode_elb_5xx.*.id
  description = "The ID of the ELB HTTPCode_ELB_5XX health check."
}

// The ID of the ELB SurgeQueueLength health check.
output "alarm_elb_surgequeuelength_id" {
  value       = aws_cloudwatch_metric_alarm.elb_surgequeuelength.*.id
  description = "The ID of the ELB SurgeQueueLength health check."
}

// The ID of the ELB HealthyHostCount health check.
output "alarm_elb_healthyhostcount_id" {
  value       = aws_cloudwatch_metric_alarm.elb_healthyhostcount.*.id
  description = "The ID of the ELB HealthyHostCount health check."
}
